<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="financial_monitoring.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1250"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="transactions" custom_title="0" dock_id="1" table="4,12:maintransactions"/><dock_state state="000000ff00000000fd000000010000000200000551000002f5fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000005510000017000ffffff000005510000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="accounts" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="0" mode="0"/></sort><column_widths><column index="1" value="113"/><column index="2" value="127"/><column index="3" value="137"/><column index="4" value="109"/><column index="5" value="111"/><column index="6" value="130"/><column index="7" value="81"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="alerts" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="83"/><column index="2" value="147"/><column index="3" value="127"/><column index="4" value="229"/><column index="5" value="108"/><column index="6" value="85"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="127"/><column index="2" value="112"/><column index="3" value="108"/><column index="4" value="74"/><column index="5" value="81"/><column index="6" value="198"/><column index="7" value="113"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="risk_rules" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="76"/><column index="2" value="300"/><column index="3" value="85"/><column index="4" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sanctioned_countries" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="0" mode="0"/></sort><column_widths><column index="1" value="202"/><column index="2" value="165"/><column index="3" value="95"/><column index="4" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="transactions" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="0" mode="0"/></sort><column_widths><column index="1" value="147"/><column index="2" value="114"/><column index="3" value="74"/><column index="4" value="82"/><column index="5" value="171"/><column index="6" value="115"/><column index="7" value="173"/><column index="8" value="145"/><column index="9" value="108"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Risk and Compliance Analysis*">-- What's the severity count by customer?
SELECT severity AS Severity, count(DISTINCT customer_id) AS CustomerCount
FROM alerts a
GROUP BY severity
;

-- What are reasons customer's accounts have high severity?
SELECT reason AS SeverityReason, count(reason) AS ReasonCount
FROM alerts a
WHERE severity = 'high'
GROUP BY reason
ORDER BY ReasonCount DESC
;

-- What are the countries that fall into the &quot;High-Risk Jurisdiction&quot;? 
-- Is the list accurate per Policy? Therefore, contributing to inaccurate numbers?
SELECT
	t.country AS Country, count(t.country) AS HighRiskCount
FROM alerts a
LEFT JOIN transactions t
ON a.transaction_id = t.transaction_id
WHERE a.reason = 'High-risk jurisdiction'
	AND a.severity = 'high'
GROUP BY t.country
ORDER BY HighRiskCount DESC
;

-- Show transactions per account and the country that are flagged.
SELECT t.account_id AS AccountID, count(t.account_id) AS AccountCount, ac.customer_id, t.country
FROM transactions t
LEFT JOIN accounts ac
ON t.account_id = ac.account_id
WHERE t.is_flagged = 'yes'
GROUP BY t.account_id
ORDER BY AccountCount DESC
;
-- Any transaction volume spikes in short periods per account? Define &quot;short period&quot;.
</sql><sql name="Business Insights">-- How many customers have more than one account type?
SELECT customer_id AS CustomerID, count(account_id) AS AccountCount, sum(balance) AS TotalBalance
FROM accounts
WHERE AccountCount &gt; 1
GROUP BY customer_id
ORDER BY TotalBalance DESC
;

-- Who are our top customers by total transaction amount?
SELECT
	a.customer_id AS CustomerID, 
	sum(t.amount) AS TransactionsAmount, 
	count(a.account_id) AS AccountCount,
	round(sum(t.amount) / count(a.account_id), 2) AS TransactionsPerAccount,
	round(sum(a.balance), 2) AS TotalBalance
FROM accounts a
LEFT JOIN transactions t
ON a.account_id = t.account_id
GROUP BY a.customer_id
ORDER BY TransactionsAmount DESC
LIMIT 20
;

-- Trends over time (monthly alerts/transactions).
-- Had to add round to prevent rounding up and resulting zeroes!!
SELECT 
	transaction_type, 
	count(CASE WHEN is_flagged = 'yes' then 1 END) AS Flagged_Count,
	count(CASE WHEN is_flagged = 'no' then 1 END) AS Not_Flagged_Count,
	count(transaction_type) AS TotalTransactions,
	round(
		count(CASE WHEN is_flagged = 'yes' then 1 END) * 100.0
		/ count(transaction_type), 2
	) AS PercentFlagged
FROM transactions
GROUP BY transaction_type
;</sql><sql name="Data Integrity/Validation">-- Check for orphaned accounts
SELECT *
FROM accounts
WHERE customer_id NOT IN (
  SELECT customer_id FROM customers
);

-- Check for orphaned transactions
SELECT *
FROM transactions
WHERE account_id NOT IN (
  SELECT account_id FROM accounts
);

-- Check for orphaned transactions
SELECT *
FROM alerts
WHERE transaction_id NOT IN (
  SELECT transaction_id FROM transactions
);

</sql><sql name="KPIs">-- % of flagged transactions; Descriptipon: Rate of potentially risky transactions (Daily, Monthly?)
SELECT ac.customer_id AS CustomerID, t.account_id
FROM transactions t
LEFT JOIN accounts ac
ON t.account_id = ac.account_id
WHERE t.is_flagged = 'yes'
ORDER BY CustomerID
;

-- High-Severity Alert Rate; Description: % of alerts with high-severity (might need to define further with rolling time frame)
SELECT
	count(alert_id) AS AlertCount,
	(SELECT count(alert_id)
		FROM alerts
		WHERE severity = 'high'
	) AS HighSeverityCount,
	(SELECT count(alert_id)
		FROM alerts
		WHERE severity = 'high'
	) /
	count(alert_id) AS HighSeverityAlertRate
FROM alerts
;

-- Average Transactions per Account (add a rolling period)
SELECT account_id AS AccountID, count(transaction_id) AS TransactionCount
FROM transactions
GROUP BY account_id
ORDER BY TransactionCount DESC
;

-- Customers with multiple flagged transactions
SELECT ac.customer_id, count(t.is_flagged) AS FlaggedTransactionCount
FROM transactions t
LEFT JOIN accounts ac
ON t.account_id = ac.account_id
WHERE t.is_flagged = 'yes'
GROUP BY ac.customer_id
ORDER BY FlaggedTransactionCount DESC
;

SELECT risk_rating</sql><sql name="KCIs">-- % of Transactions from Sanctioned Countries (Should be near 0 in real systems)
-- % of Inactive Risk Rules with Recent Alerts (If alerts are still being generated by inactive rules, that’s a control issue
-- # of Accounts Without Customer ID (Data integrity issue → failure in onboarding/KYC control)
-- % of Rules Not Triggering Alerts (Might signal outdated controls)
-- % of Alerts Without Follow-Up Action (Simulated — for example, alerts that are open for &gt;30 days)
-- # of Transactions Missing Required Fields (Control over data quality (e.g., no amount, no transaction type))
-- % of High-Risk Countries Not Mapped to Any Rule (Gaps in your rule coverage)
-- Inactive Accounts with Transactions (Could indicate unauthorized activity or weak access control)</sql><sql name="SQL 7*">UPDATE risk_rules
set severity = 'medium'
WHERE rule_id in (2, 4);

SELECT *
from risk_rules;</sql><current_tab id="5"/></tab_sql></sqlb_project>
